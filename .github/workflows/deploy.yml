name: Deploy to VPS

on:
  push:
    branches: ["main"]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start ssh-agent and add key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add droplet host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H -p 22 ${{ secrets.DROPLET_HOST }} >> ~/.ssh/known_hosts

      # Ensure remote dir exists (first deploy) and rsync code (every deploy)
      # We do NOT create .env locally; we write it on the server from ENV_FILE.
      - name: Ensure remote directory exists
        run: ssh "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}" "mkdir -p '${{ secrets.REMOTE_DIR }}'"

      - name: Rsync repo to droplet (preserve server-side data/)
        run: |
          rsync -az --delete \
            --exclude 'node_modules' \
            --exclude '.git' \
            --exclude '.github' \
            --exclude 'data/' \
            ./  "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}:${{ secrets.REMOTE_DIR }}/"

      - name: Install deps & (re)start with PM2
        run: >
          ssh "${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }}"
          "bash -lc 'set -euo pipefail;
            # Make pm2 available in non-login shell
            [ -f ~/.profile ] && . ~/.profile || true;
            [ -f ~/.bashrc ] && . ~/.bashrc || true;

            APP_DIR=\"${{ secrets.REMOTE_DIR }}\";
            APP_NAME=\$(basename \"$APP_DIR\");
            mkdir -p \"$APP_DIR\" \"$APP_DIR/data\";
            cd \"$APP_DIR\";

            # Write .env on the server from the ENV_FILE secret (authoritative source)
            cat > .env <<ENV_HERE
${{ secrets.ENV_FILE }}
ENV_HERE

            export NPM_CONFIG_FUND=false;
            if [ ! -f package-lock.json ]; then
              npm install --package-lock-only;
            fi;
            npm ci --omit=dev;

            PM2=\$(command -v pm2 || true);
            if [ -z \"$PM2\" ]; then
              echo \"pm2 not found on PATH for user \$USER\" >&2; exit 1;
            fi;

            if pm2 list | grep -Eq \"^[[:space:]]*\$APP_NAME[[:space:]]\"; then
              pm2 reload \"\$APP_NAME\" --update-env;
            else
              pm2 start index.js --name \"\$APP_NAME\";
            fi;

            pm2 save'"